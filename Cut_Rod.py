L = [1, 10, 13, 18, 20, 31, 32]def wrapped(R,values_list = list()):    values_list = [0] * len(R)    return Cut_Rod(R, values_list), values_list[:len(R) - 1]    def Cut_Rod(R, values):    length = len(R)    values[0] = R[0]    if length == 2:        values[1] = max(values[0] * 2, R[1])        return values[1]        else:                sub_max = R[length - 1]        for i in range(length // 2):            if values[i] == 0:                values[i] = Cut_Rod(R[:i + 1], values)            if values[length - i - 2] == 0:                values[length - i - 2] = Cut_Rod(R[: length - i - 1],values)            sub_max = max(sub_max, values[i] + values[length - i - 2])            print(values)        return sub_max    wrapped(L)